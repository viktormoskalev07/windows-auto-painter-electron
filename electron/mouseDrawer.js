import { exec } from "child_process";
import { screen } from "electron";

let isDrawing = false;
let interval = null;
let currentMonitor = null; // –¢–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä –∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫—É—Ä—Å–æ—Ä–∞.
 */
function getCursorPosition() {
    const cursor = screen.getCursorScreenPoint();
    return {
        x: cursor.x,
        y: cursor.y
    };
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ –ø–µ—Ä–µ—à—ë–ª –ª–∏ –∫—É—Ä—Å–æ—Ä –Ω–∞ –¥—Ä—É–≥–æ–π –º–æ–Ω–∏—Ç–æ—Ä.
 */


/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ä–∏—Å–æ–≤–∞–Ω–∏–µ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —É—á—ë—Ç–æ–º DPI –∫–∞–∂–¥–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∞.
 */
export function startDrawing(points) {
    if (isDrawing) return;

    let { x: startX, y: startY } = getCursorPosition();
    isDrawing = true;
    let index = 0;
    let lastX = startX, lastY = startY;

    interval = setInterval(() => {
        if (!isDrawing || index >= points.length) {
            stopDrawing();
            return;
        }
        const { x, y } = points[index];
        const adjX = Math.round(startX + x);
        const adjY = Math.round(startY + y);

        if (adjX !== lastX || adjY !== lastY) {
            console.log(`üéØ Adjusted coords: x=${adjX}, y=${adjY} (Monitor: ${currentMonitor})`);
            exec("nircmd.exe sendmouse left up");
            exec(`nircmd.exe setcursor ${adjX} ${adjY}`);
            exec("nircmd.exe sendmouse left down");
            exec("nircmd.exe sendmouse left up");
            lastX = adjX;
            lastY = adjY;
        }

        index++;
    }, 5);
}

/**
 * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–∏—Å–æ–≤–∞–Ω–∏–µ.
 */
export function stopDrawing() {
    if (interval) {
        clearInterval(interval);
        interval = null;
    }
    isDrawing = false;
    console.log("üõë Drawing stopped!");
}
